cols <- c("#734835","#965F36","#1F5857","#28722A","#BF9000","#9E0000")
random <- sample(6)
p <- ggplot(app_data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=2.5)) +
geom_rect(color=cols[random], fill=fills[random])+
geom_text(aes(label=app_data$ingredient,label.size=0,
x=3.5,y=(ymin+ymax)/2),inherit.aes = T,
show.legend = FALSE, vjust= "inward", size = 2.55)+
coord_polar(theta="y") +
xlim(c(-1, 4)) +
theme_void() +
theme(legend.position = "none")
return(p)
}
##### Plot combinado #####
app_plot <- donutplot_ing(appetizer)
ent_plot <- donutplot_ing(entree)
des_plot <- donutplot_ing(dessert)
wallpaper <- png::readPNG("background2.png") #Fondo previamente diseÃ±ado
plot <- ggdraw()+
background_image(wallpaper)+
draw_plot(app_plot, x = 0.15, y = 0.243, width = 0.220, height = 0.220) + #1
draw_plot(ent_plot, x = 0.380, y =0.705, width = 0.220, height = 0.220) + #2
draw_plot(des_plot, x = 0.622, y = 0.240, width = 0.220, height = 0.220) #3
plot
##### FunciÃ³n donut plot #####
donutplot_ing <-  function(food_data_frame){
app_data <- as.data.frame(table(food_data_frame))
app_data <- arrange(app_data,-Freq)[1:6,]
colnames(app_data) <- c("ingredient", "count")
app_data$fraction <- app_data$count/sum(app_data$count)
app_data$ymax <- cumsum(app_data$fraction)
app_data$ymin <- c(0, head(app_data$ymax, n=-1))
app_data$labelPosition <- (app_data$ymax + app_data$ymin) / 2
app_data$label <- paste0(app_data$ingredient, "\n value: ", app_data$count)
fills <- c("#9A470E","#A96C3D","#256666","#2F8832","#EAB200","#C00000")
cols <- c("#734835","#965F36","#1F5857","#28722A","#BF9000","#9E0000")
random <- sample(6)
p <- ggplot(app_data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=2.5)) +
geom_rect(color=cols[random], fill=fills[random])+
geom_text(aes(label=app_data$ingredient,label.size=0,
x=3.5,y=(ymin+ymax)/2),inherit.aes = T,
show.legend = FALSE, vjust= "inward", size = 2)+
coord_polar(theta="y") +
xlim(c(-1, 4)) +
theme_void() +
theme(legend.position = "none")
return(p)
}
##### Plot combinado #####
app_plot <- donutplot_ing(appetizer)
ent_plot <- donutplot_ing(entree)
des_plot <- donutplot_ing(dessert)
wallpaper <- png::readPNG("background2.png") #Fondo previamente diseÃ±ado
plot <- ggdraw()+
background_image(wallpaper)+
draw_plot(app_plot, x = 0.15, y = 0.243, width = 0.220, height = 0.220) + #1
draw_plot(ent_plot, x = 0.380, y =0.705, width = 0.220, height = 0.220) + #2
draw_plot(des_plot, x = 0.622, y = 0.240, width = 0.220, height = 0.220) #3
plot
##### ExportaciÃ³n #####
ggsave(filename = "plot2.png",plot = plot, device = "png", height = 10, width = 10)
donutplot_ing <-  function(food_data_frame){
app_data <- as.data.frame(table(food_data_frame))
app_data <- arrange(app_data,-Freq)[1:6,]
colnames(app_data) <- c("ingredient", "count")
app_data$fraction <- app_data$count/sum(app_data$count)
app_data$ymax <- cumsum(app_data$fraction)
app_data$ymin <- c(0, head(app_data$ymax, n=-1))
app_data$labelPosition <- (app_data$ymax + app_data$ymin) / 2
app_data$label <- paste0(app_data$ingredient, "\n value: ", app_data$count)
fills <- c("#9A470E","#A96C3D","#256666","#2F8832","#EAB200","#C00000")
cols <- c("#734835","#965F36","#1F5857","#28722A","#BF9000","#9E0000")
random <- sample(6)
p <- ggplot(app_data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=2.5)) +
geom_rect(color=cols[random], fill=fills[random])+
geom_text(aes(label=app_data$ingredient,label.size=0,
x=3.5,y=(ymin+ymax)/2),inherit.aes = T,
show.legend = FALSE, vjust= "inward", size = 2, family = "Times New Roman")+
coord_polar(theta="y") +
xlim(c(-1, 4)) +
theme_void() +
theme(legend.position = "none")
return(p)
}
##### Plot combinado #####
app_plot <- donutplot_ing(appetizer)
ent_plot <- donutplot_ing(entree)
des_plot <- donutplot_ing(dessert)
wallpaper <- png::readPNG("background2.png") #Fondo previamente diseÃ±ado
plot <- ggdraw()+
background_image(wallpaper)+
draw_plot(app_plot, x = 0.15, y = 0.243, width = 0.220, height = 0.220) + #1
draw_plot(ent_plot, x = 0.380, y =0.705, width = 0.220, height = 0.220) + #2
draw_plot(des_plot, x = 0.622, y = 0.240, width = 0.220, height = 0.220) #3
plot
extrafont::loadfonts(device="win")
install.packages("extrafontdb")
extrafont::loadfonts(device="win")
install.packages("extrafont")
extrafont::loadfonts(device="win")
donutplot_ing <-  function(food_data_frame){
app_data <- as.data.frame(table(food_data_frame))
app_data <- arrange(app_data,-Freq)[1:6,]
colnames(app_data) <- c("ingredient", "count")
app_data$fraction <- app_data$count/sum(app_data$count)
app_data$ymax <- cumsum(app_data$fraction)
app_data$ymin <- c(0, head(app_data$ymax, n=-1))
app_data$labelPosition <- (app_data$ymax + app_data$ymin) / 2
app_data$label <- paste0(app_data$ingredient, "\n value: ", app_data$count)
fills <- c("#9A470E","#A96C3D","#256666","#2F8832","#EAB200","#C00000")
cols <- c("#734835","#965F36","#1F5857","#28722A","#BF9000","#9E0000")
random <- sample(6)
p <- ggplot(app_data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=2.5)) +
geom_rect(color=cols[random], fill=fills[random])+
geom_text(aes(label=app_data$ingredient,label.size=0,
x=3.5,y=(ymin+ymax)/2),inherit.aes = T,
show.legend = FALSE, vjust= "inward", size = 2.5, family = "Times New Roman")+
coord_polar(theta="y") +
xlim(c(-1, 4)) +
theme_void() +
theme(legend.position = "none")
return(p)
}
##### Plot combinado #####
app_plot <- donutplot_ing(appetizer)
ent_plot <- donutplot_ing(entree)
des_plot <- donutplot_ing(dessert)
wallpaper <- png::readPNG("background2.png") #Fondo previamente diseÃ±ado
plot <- ggdraw()+
background_image(wallpaper)+
draw_plot(app_plot, x = 0.15, y = 0.243, width = 0.220, height = 0.220) + #1
draw_plot(ent_plot, x = 0.380, y =0.705, width = 0.220, height = 0.220) + #2
draw_plot(des_plot, x = 0.622, y = 0.240, width = 0.220, height = 0.220) #3
plot
donutplot_ing <-  function(food_data_frame){
app_data <- as.data.frame(table(food_data_frame))
app_data <- arrange(app_data,-Freq)[1:6,]
colnames(app_data) <- c("ingredient", "count")
app_data$fraction <- app_data$count/sum(app_data$count)
app_data$ymax <- cumsum(app_data$fraction)
app_data$ymin <- c(0, head(app_data$ymax, n=-1))
app_data$labelPosition <- (app_data$ymax + app_data$ymin) / 2
app_data$label <- paste0(app_data$ingredient, "\n value: ", app_data$count)
fills <- c("#9A470E","#A96C3D","#256666","#2F8832","#EAB200","#C00000")
cols <- c("#734835","#965F36","#1F5857","#28722A","#BF9000","#9E0000")
random <- sample(6)
p <- ggplot(app_data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=2.5)) +
geom_rect(color=cols[random], fill=fills[random])+
geom_text(aes(label=app_data$ingredient,
x=3.5,y=(ymin+ymax)/2),inherit.aes = T,
show.legend = FALSE, vjust= "inward", size = 2.4)+
coord_polar(theta="y") +
xlim(c(-1, 4)) +
theme_void() +
theme(legend.position = "none")
return(p)
}
##### Plot combinado #####
app_plot <- donutplot_ing(appetizer)
ent_plot <- donutplot_ing(entree)
des_plot <- donutplot_ing(dessert)
wallpaper <- png::readPNG("background2.png") #Fondo previamente diseÃ±ado
plot <- ggdraw()+
background_image(wallpaper)+
draw_plot(app_plot, x = 0.15, y = 0.243, width = 0.220, height = 0.220) + #1
draw_plot(ent_plot, x = 0.380, y =0.705, width = 0.220, height = 0.220) + #2
draw_plot(des_plot, x = 0.622, y = 0.240, width = 0.220, height = 0.220) #3
donutplot_ing <-  function(food_data_frame){
app_data <- as.data.frame(table(food_data_frame))
app_data <- arrange(app_data,-Freq)[1:6,]
colnames(app_data) <- c("ingredient", "count")
app_data$fraction <- app_data$count/sum(app_data$count)
app_data$ymax <- cumsum(app_data$fraction)
app_data$ymin <- c(0, head(app_data$ymax, n=-1))
app_data$labelPosition <- (app_data$ymax + app_data$ymin) / 2
app_data$label <- paste0(app_data$ingredient, "\n value: ", app_data$count)
fills <- c("#9A470E","#A96C3D","#256666","#2F8832","#EAB200","#C00000")
cols <- c("#734835","#965F36","#1F5857","#28722A","#BF9000","#9E0000")
random <- sample(6)
p <- ggplot(app_data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=2.5)) +
geom_rect(color=cols[random], fill=fills[random])+
geom_text(aes(label=app_data$ingredient,
x=3.5,y=(ymin+ymax)/2),inherit.aes = T,
show.legend = FALSE, vjust= "inward", size = 2.3)+
coord_polar(theta="y") +
xlim(c(-1, 4)) +
theme_void() +
theme(legend.position = "none")
return(p)
}
##### Plot combinado #####
app_plot <- donutplot_ing(appetizer)
ent_plot <- donutplot_ing(entree)
des_plot <- donutplot_ing(dessert)
wallpaper <- png::readPNG("background2.png") #Fondo previamente diseÃ±ado
plot <- ggdraw()+
background_image(wallpaper)+
draw_plot(app_plot, x = 0.15, y = 0.243, width = 0.220, height = 0.220) + #1
draw_plot(ent_plot, x = 0.380, y =0.705, width = 0.220, height = 0.220) + #2
draw_plot(des_plot, x = 0.622, y = 0.240, width = 0.220, height = 0.220) #3
plot
donutplot_ing <-  function(food_data_frame){
app_data <- as.data.frame(table(food_data_frame))
app_data <- arrange(app_data,-Freq)[1:6,]
colnames(app_data) <- c("ingredient", "count")
app_data$fraction <- app_data$count/sum(app_data$count)
app_data$ymax <- cumsum(app_data$fraction)
app_data$ymin <- c(0, head(app_data$ymax, n=-1))
app_data$labelPosition <- (app_data$ymax + app_data$ymin) / 2
app_data$label <- paste0(app_data$ingredient, "\n value: ", app_data$count)
fills <- c("#9A470E","#A96C3D","#256666","#2F8832","#EAB200","#C00000")
cols <- c("#734835","#965F36","#1F5857","#28722A","#BF9000","#9E0000")
random <- sample(6)
p <- ggplot(app_data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=2.5)) +
geom_rect(color=cols[random], fill=fills[random])+
geom_text(aes(label=app_data$ingredient,
x=3.5,y=(ymin+ymax)/2),inherit.aes = T,
show.legend = FALSE, vjust= "inward", size = 4)+
coord_polar(theta="y") +
xlim(c(-1, 4)) +
theme_void() +
theme(legend.position = "none")
return(p)
}
##### Plot combinado #####
app_plot <- donutplot_ing(appetizer)
ent_plot <- donutplot_ing(entree)
des_plot <- donutplot_ing(dessert)
wallpaper <- png::readPNG("background2.png") #Fondo previamente diseÃ±ado
plot <- ggdraw()+
background_image(wallpaper)+
draw_plot(app_plot, x = 0.15, y = 0.243, width = 0.220, height = 0.220) + #1
draw_plot(ent_plot, x = 0.380, y =0.705, width = 0.220, height = 0.220) + #2
draw_plot(des_plot, x = 0.622, y = 0.240, width = 0.220, height = 0.220) #3
plot
donutplot_ing <-  function(food_data_frame){
app_data <- as.data.frame(table(food_data_frame))
app_data <- arrange(app_data,-Freq)[1:6,]
colnames(app_data) <- c("ingredient", "count")
app_data$fraction <- app_data$count/sum(app_data$count)
app_data$ymax <- cumsum(app_data$fraction)
app_data$ymin <- c(0, head(app_data$ymax, n=-1))
app_data$labelPosition <- (app_data$ymax + app_data$ymin) / 2
app_data$label <- paste0(app_data$ingredient, "\n value: ", app_data$count)
fills <- c("#9A470E","#A96C3D","#256666","#2F8832","#EAB200","#C00000")
cols <- c("#734835","#965F36","#1F5857","#28722A","#BF9000","#9E0000")
random <- sample(6)
p <- ggplot(app_data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=2.5)) +
geom_rect(color=cols[random], fill=fills[random])+
geom_text(aes(label=app_data$ingredient,
x=3.5,y=(ymin+ymax)/2),inherit.aes = T,
show.legend = FALSE, vjust= "inward", size = 3)+
coord_polar(theta="y") +
xlim(c(-1, 4)) +
theme_void() +
theme(legend.position = "none")
return(p)
}
##### Plot combinado #####
app_plot <- donutplot_ing(appetizer)
ent_plot <- donutplot_ing(entree)
des_plot <- donutplot_ing(dessert)
wallpaper <- png::readPNG("background2.png") #Fondo previamente diseÃ±ado
plot <- ggdraw()+
background_image(wallpaper)+
draw_plot(app_plot, x = 0.15, y = 0.243, width = 0.220, height = 0.220) + #1
draw_plot(ent_plot, x = 0.380, y =0.705, width = 0.220, height = 0.220) + #2
draw_plot(des_plot, x = 0.622, y = 0.240, width = 0.220, height = 0.220) #3
plot
donutplot_ing <-  function(food_data_frame){
app_data <- as.data.frame(table(food_data_frame))
app_data <- arrange(app_data,-Freq)[1:6,]
colnames(app_data) <- c("ingredient", "count")
app_data$fraction <- app_data$count/sum(app_data$count)
app_data$ymax <- cumsum(app_data$fraction)
app_data$ymin <- c(0, head(app_data$ymax, n=-1))
app_data$labelPosition <- (app_data$ymax + app_data$ymin) / 2
app_data$label <- paste0(app_data$ingredient, "\n value: ", app_data$count)
fills <- c("#9A470E","#A96C3D","#256666","#2F8832","#EAB200","#C00000")
cols <- c("#734835","#965F36","#1F5857","#28722A","#BF9000","#9E0000")
random <- sample(6)
p <- ggplot(app_data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=2.5)) +
geom_rect(color=cols[random], fill=fills[random])+
geom_text(aes(label=app_data$ingredient,
x=3.5,y=(ymin+ymax)/2),inherit.aes = T,
show.legend = FALSE, vjust= "inward", size = 2.5)+
coord_polar(theta="y") +
xlim(c(-1, 4)) +
theme_void() +
theme(legend.position = "none")
return(p)
}
##### Plot combinado #####
app_plot <- donutplot_ing(appetizer)
ent_plot <- donutplot_ing(entree)
des_plot <- donutplot_ing(dessert)
wallpaper <- png::readPNG("background2.png") #Fondo previamente diseÃ±ado
plot <- ggdraw()+
background_image(wallpaper)+
draw_plot(app_plot, x = 0.15, y = 0.243, width = 0.220, height = 0.220) + #1
draw_plot(ent_plot, x = 0.380, y =0.705, width = 0.220, height = 0.220) + #2
draw_plot(des_plot, x = 0.622, y = 0.240, width = 0.220, height = 0.220) #3
plot
donutplot_ing <-  function(food_data_frame){
app_data <- as.data.frame(table(food_data_frame))
app_data <- arrange(app_data,-Freq)[1:6,]
colnames(app_data) <- c("ingredient", "count")
app_data$fraction <- app_data$count/sum(app_data$count)
app_data$ymax <- cumsum(app_data$fraction)
app_data$ymin <- c(0, head(app_data$ymax, n=-1))
app_data$labelPosition <- (app_data$ymax + app_data$ymin) / 2
app_data$label <- paste0(app_data$ingredient, "\n value: ", app_data$count)
fills <- c("#9A470E","#A96C3D","#256666","#2F8832","#EAB200","#C00000")
cols <- c("#734835","#965F36","#1F5857","#28722A","#BF9000","#9E0000")
random <- sample(6)
p <- ggplot(app_data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=2.5)) +
geom_rect(color=cols[random], fill=fills[random])+
geom_text(aes(label=app_data$ingredient,
x=3.5,y=(ymin+ymax)/2),inherit.aes = T,
show.legend = FALSE, vjust= "inward", size = 2.5)+
coord_polar(theta="y") +
xlim(c(-1, 4)) +
theme_void() +
theme(legend.position = "none")
return(p)
}
##### Plot combinado #####
app_plot <- donutplot_ing(appetizer)
ent_plot <- donutplot_ing(entree)
des_plot <- donutplot_ing(dessert)
wallpaper <- png::readPNG("background2.png") #Fondo previamente diseÃ±ado
plot <- ggdraw()+
background_image(wallpaper)+
draw_plot(app_plot, x = 0.15, y = 0.243, width = 0.250, height = 0.250) + #1
draw_plot(ent_plot, x = 0.380, y =0.705, width = 0.250, height = 0.250) + #2
draw_plot(des_plot, x = 0.622, y = 0.240, width = 0.250, height = 0.250) #3
plot
donutplot_ing <-  function(food_data_frame){
app_data <- as.data.frame(table(food_data_frame))
app_data <- arrange(app_data,-Freq)[1:6,]
colnames(app_data) <- c("ingredient", "count")
app_data$fraction <- app_data$count/sum(app_data$count)
app_data$ymax <- cumsum(app_data$fraction)
app_data$ymin <- c(0, head(app_data$ymax, n=-1))
app_data$labelPosition <- (app_data$ymax + app_data$ymin) / 2
app_data$label <- paste0(app_data$ingredient, "\n value: ", app_data$count)
fills <- c("#9A470E","#A96C3D","#256666","#2F8832","#EAB200","#C00000")
cols <- c("#734835","#965F36","#1F5857","#28722A","#BF9000","#9E0000")
random <- sample(6)
p <- ggplot(app_data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=2.5)) +
geom_rect(color=cols[random], fill=fills[random])+
geom_text(aes(label=app_data$ingredient,
x=3.5,y=(ymin+ymax)/2),inherit.aes = T,
show.legend = FALSE, vjust= "inward", size = 2.5)+
coord_polar(theta="y") +
xlim(c(-1, 4)) +
theme_void() +
theme(legend.position = "none")
return(p)
}
##### Plot combinado #####
app_plot <- donutplot_ing(appetizer)
ent_plot <- donutplot_ing(entree)
des_plot <- donutplot_ing(dessert)
wallpaper <- png::readPNG("background2.png") #Fondo previamente diseÃ±ado
plot <- ggdraw()+
background_image(wallpaper)+
draw_plot(app_plot, x = 0.15, y = 0.243, width = 0.230, height = 0.230) + #1
draw_plot(ent_plot, x = 0.380, y =0.705, width = 0.230, height = 0.230) + #2
draw_plot(des_plot, x = 0.622, y = 0.240, width = 0.230, height = 0.230) #3
plot
donutplot_ing <-  function(food_data_frame){
app_data <- as.data.frame(table(food_data_frame))
app_data <- arrange(app_data,-Freq)[1:6,]
colnames(app_data) <- c("ingredient", "count")
app_data$fraction <- app_data$count/sum(app_data$count)
app_data$ymax <- cumsum(app_data$fraction)
app_data$ymin <- c(0, head(app_data$ymax, n=-1))
app_data$labelPosition <- (app_data$ymax + app_data$ymin) / 2
app_data$label <- paste0(app_data$ingredient, "\n value: ", app_data$count)
fills <- c("#9A470E","#A96C3D","#256666","#2F8832","#EAB200","#C00000")
cols <- c("#734835","#965F36","#1F5857","#28722A","#BF9000","#9E0000")
random <- sample(6)
p <- ggplot(app_data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=2.5)) +
geom_rect(color=cols[random], fill=fills[random])+
geom_text(aes(label=app_data$ingredient,
x=3.5,y=(ymin+ymax)/2),inherit.aes = T,
show.legend = FALSE, vjust= "inward", size = 2.5)+
coord_polar(theta="y") +
xlim(c(-1, 4)) +
theme_void() +
theme(legend.position = "none")
return(p)
}
##### Plot combinado #####
app_plot <- donutplot_ing(appetizer)
ent_plot <- donutplot_ing(entree)
des_plot <- donutplot_ing(dessert)
wallpaper <- png::readPNG("background2.png") #Fondo previamente diseÃ±ado
plot <- ggdraw()+
background_image(wallpaper)+
draw_plot(app_plot, x = 0.15, y = 0.243, width = 0.210, height = 0.220) + #1
draw_plot(ent_plot, x = 0.380, y =0.705, width = 0.210, height = 0.220) + #2
draw_plot(des_plot, x = 0.622, y = 0.240, width = 0.210, height = 0.220) #3
plot
donutplot_ing <-  function(food_data_frame){
app_data <- as.data.frame(table(food_data_frame))
app_data <- arrange(app_data,-Freq)[1:6,]
colnames(app_data) <- c("ingredient", "count")
app_data$fraction <- app_data$count/sum(app_data$count)
app_data$ymax <- cumsum(app_data$fraction)
app_data$ymin <- c(0, head(app_data$ymax, n=-1))
app_data$labelPosition <- (app_data$ymax + app_data$ymin) / 2
app_data$label <- paste0(app_data$ingredient, "\n value: ", app_data$count)
fills <- c("#9A470E","#A96C3D","#256666","#2F8832","#EAB200","#C00000")
cols <- c("#734835","#965F36","#1F5857","#28722A","#BF9000","#9E0000")
random <- sample(6)
p <- ggplot(app_data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=2.5)) +
geom_rect(color=cols[random], fill=fills[random])+
geom_text(aes(label=app_data$ingredient,
x=3.5,y=(ymin+ymax)/2),inherit.aes = T,
show.legend = FALSE, vjust= "inward", size = 2.5)+
coord_polar(theta="y") +
xlim(c(-1, 4)) +
theme_void() +
theme(legend.position = "none")
return(p)
}
##### Plot combinado #####
app_plot <- donutplot_ing(appetizer)
ent_plot <- donutplot_ing(entree)
des_plot <- donutplot_ing(dessert)
wallpaper <- png::readPNG("background2.png") #Fondo previamente diseÃ±ado
plot <- ggdraw()+
background_image(wallpaper)+
draw_plot(app_plot, x = 0.15, y = 0.243, width = 0.220, height = 0.220) + #1
draw_plot(ent_plot, x = 0.380, y =0.705, width = 0.220, height = 0.220) + #2
draw_plot(des_plot, x = 0.622, y = 0.240, width = 0.220, height = 0.220) #3
plot
##### ExportaciÃ³n #####
ggsave(filename = "plot2.png",plot = plot, device = "png", height = 10, width = 10)
donutplot_ing <-  function(food_data_frame){
app_data <- as.data.frame(table(food_data_frame))
app_data <- arrange(app_data,-Freq)[1:6,]
colnames(app_data) <- c("ingredient", "count")
app_data$fraction <- app_data$count/sum(app_data$count)
app_data$ymax <- cumsum(app_data$fraction)
app_data$ymin <- c(0, head(app_data$ymax, n=-1))
app_data$labelPosition <- (app_data$ymax + app_data$ymin) / 2
app_data$label <- paste0(app_data$ingredient, "\n value: ", app_data$count)
fills <- c("#9A470E","#A96C3D","#256666","#2F8832","#EAB200","#C00000")
cols <- c("#734835","#965F36","#1F5857","#28722A","#BF9000","#9E0000")
random <- sample(6)
p <- ggplot(app_data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=2.5)) +
geom_rect(color=cols[random], fill=fills[random])+
geom_text(aes(label=app_data$ingredient,
x=3.5,y=(ymin+ymax)/2),inherit.aes = T,
show.legend = FALSE, vjust= "inward", size = 5)+
coord_polar(theta="y") +
xlim(c(-1, 4)) +
theme_void() +
theme(legend.position = "none")
return(p)
}
##### Plot combinado #####
app_plot <- donutplot_ing(appetizer)
ent_plot <- donutplot_ing(entree)
des_plot <- donutplot_ing(dessert)
wallpaper <- png::readPNG("background2.png") #Fondo previamente diseÃ±ado
plot <- ggdraw()+
background_image(wallpaper)+
draw_plot(app_plot, x = 0.15, y = 0.243, width = 0.220, height = 0.220) + #1
draw_plot(ent_plot, x = 0.380, y =0.705, width = 0.220, height = 0.220) + #2
draw_plot(des_plot, x = 0.622, y = 0.240, width = 0.220, height = 0.220) #3
##### ExportaciÃ³n #####
ggsave(filename = "plot2.png",plot = plot, device = "png", height = 10, width = 10)
donutplot_ing <-  function(food_data_frame){
app_data <- as.data.frame(table(food_data_frame))
app_data <- arrange(app_data,-Freq)[1:6,]
colnames(app_data) <- c("ingredient", "count")
app_data$fraction <- app_data$count/sum(app_data$count)
app_data$ymax <- cumsum(app_data$fraction)
app_data$ymin <- c(0, head(app_data$ymax, n=-1))
app_data$labelPosition <- (app_data$ymax + app_data$ymin) / 2
app_data$label <- paste0(app_data$ingredient, "\n value: ", app_data$count)
fills <- c("#9A470E","#A96C3D","#256666","#2F8832","#EAB200","#C00000")
cols <- c("#734835","#965F36","#1F5857","#28722A","#BF9000","#9E0000")
random <- sample(6)
p <- ggplot(app_data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=2.5)) +
geom_rect(color=cols[random], fill=fills[random])+
geom_text(aes(label=app_data$ingredient,
x=3.5,y=(ymin+ymax)/2),inherit.aes = T,
show.legend = FALSE, vjust= "inward", size = 3)+
coord_polar(theta="y") +
xlim(c(-1, 4)) +
theme_void() +
theme(legend.position = "none")
return(p)
}
##### Plot combinado #####
app_plot <- donutplot_ing(appetizer)
ent_plot <- donutplot_ing(entree)
des_plot <- donutplot_ing(dessert)
wallpaper <- png::readPNG("background2.png") #Fondo previamente diseÃ±ado
plot <- ggdraw()+
background_image(wallpaper)+
draw_plot(app_plot, x = 0.15, y = 0.243, width = 0.220, height = 0.220) + #1
draw_plot(ent_plot, x = 0.380, y =0.705, width = 0.220, height = 0.220) + #2
draw_plot(des_plot, x = 0.622, y = 0.240, width = 0.220, height = 0.220) #3
##### ExportaciÃ³n #####
ggsave(filename = "plot2.png",plot = plot, device = "png", height = 10, width = 10)
View(app_data)
